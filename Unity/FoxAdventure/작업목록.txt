유니티 프로젝트를 생성한다.
에셋스토어로 이동하여 써니랜드에셋을 검색해서 프로젝트에 추가한다.
프로젝트를 열고 화면에 레이아웃을 리셋하고 씬과 게임을 같이 보도록 배치한다.
게임탭에 해상도(Free Aspect)에서 FHD로 변경한다.
써니랜드에셋에 써니랜드 아트워크 폴더 안에서 씬 폴더를 찾아서 데모캐릭터 씬을 열어 캐릭터를 둘러본다.
여우, 주머니쥐, 개구리, 독수리 4가지 캐릭터를 이용하여 게임을 제작할 예정
씬생성하고 저장한 후, 플레이어 이미지를 씬에 드래그앤 드롭한다.
Window 창에서 타일 팔레트를 가져와서 타일맵에 랙트앵글러로 생성 후 맵을 제작하며 에셋의 영상을 캡쳐해서 어떻게 타일들을 배치할지 참고해서 본다.
내가 사용할 오브젝트를 선택해서 스프라이트랜더러에 스프라이트 항목을 클릭해서 이미지의 위치를 찾는다.
스프라이트 항목에 픽셀퍼유닛이라는 메뉴의 값을 16으로 변경한다.
플레이어가 오른쪽을 보고 있으므로, 오른쪽으로 이동한다.
이동하면 포지션의 x값이 증가한다. -> 조작(오른쪽 방향키)을 누를 때 포지션의 x값이 증가하면 된다. -> 스크립트가 있으면, 게임이 실행하는 중에 오브젝트의 인스펙터를 변경할 수 있다.
->이동시키기기 위해 Update함수 안에 이동조작을 넣는다. -> 이동만 있고 조작이 없으므로, 키를 입력받도록 추가한다. -> 오른쪽말고 왼쪽도 이동하게 한다.
이동하니 맵을 인식(충돌)을 안하고 계속 오른쪽으로 감. -> Add Component에서 Rigidbody 2D를 추가한다.
Rigidbody 2d를 추가하니까 끝도 없이 떨어진다. -> Add Component에서 Circle Collider 2D를 추가해서 충돌 처리를 한다.
-> 그래도 떨어짐. -> 맵이 일종의 홀로그램 상태로 타일맵에도 콜라이더처리를 해줘야함. -> 타일맵에 TilemapCollider 2D를 추가한다.
-> 맵과 충돌하니 캐릭터가 뒹굴뒹굴 굴러감 -> 카메라가 캐릭터에 붙어있어서 생긴 문제 -> Rigidbody 2D의 Constraint 탭에서 Freeze Rotation Z를 체크.
-> 플레이어를 점프하게 만들고 싶다 -> 점프? 물체에 힘을 위로 가해서 중력에 의해서 떨어지는 것 ->  추가하는 방법 -> 중력을 Rigidbody에서 추가햇으니 마찬가지로 Rigidbody에서 힘을 위로 가하면 된다.

공격을한다. 
공격할 대상 -> 몬스터 3
총에서 총알을 쏜다.


몬스터
주머니쥐: 왔다갔다 하게 만들어야함. 2
ㄴ왔다갔다는 움직이고 나서 고민한다.
ㄴ왼쪽으로 움직인다.
ㄴ주머니쥐가 날라다님 -> 리지드바디가 필요함. -> 콜라이더가 없어서
개구리: 폴짝폴짝 뛰어 다닌다. 4
ㄴ폴짝폴짝: 뛰면서 이동한다.
ㄴ이동과 점프를 같이 해야한다. -> 플레이어에서 이동과 점프를 가져온다 -> 점프를 땅에 닿았을 때 다시 점프한다 
-> 메뚜기처럼 뜀 -> 코루틴에 타이머를 이용하여 점프를 시간마다 실행한다 
-> 점프를 안하고 있을 때도 이동함 -> 점프를 할때만 이동하는걸로 바꾼다.
독수리:날아다니다가 플레이어를 발견하면 플레이어의 방향으로 이동한다. 5


아이템
별: 무적: 적이 공격하지만 무적상태라면 무효화가 된다. : 먹으면 HP가 감소하지 않는다. 3
버섯: HP같은 개념 먹으면 HP가 2가 된다. 2
불꽃: 버섯 + 무기 : 먹으면 불꽃 무기가 생성되고 HP가 2가 된다. 6 무기가 생길때 HP가 같이 추가됨.
동전: 점수추가 : (먹으면: 부딪히면) 점수가 오른다. 1(순서)
ㄴ체리를 먹으면 점수가 오른다.
-> OnCollissionEnter2D에서 점수를 증가시킨다.
-> 어디에 부딪히든 점수가 오른다.
-> 체리일때만 점수가 오르도록 변경한다.
-> 체리를 먹었는데 삭제되지 않는다.
-> 삭제코드(Destroy)를 추가함
-> 플레이어가 삭제됨 : 함정
-> 체리(부딪힌 대상)을 삭제해야함.
ㄴ보석 아이템을 추가하고 100점이 오르게 만든다.
ㄴ플레이어에서 보석아이템을 먹을 때 100점이 오르게 한다 -> 오브젝트가 늘어날때마다 코드가 늘어난다.
->아이템스크립트를 제작하고, 점수를 부딧히는 대상이 플레이어일때 객체 설정된 점수를 추가한다.



게임과 영상의 차이점은 무엇인가? 조작을 해야한다. -> 키를 눌러야 작동한다. -> ????
스크립트에서 업데이트에서 코드를 추가하고, 빌드한다. -> 빌드에서 오류나는 부분을 물어볼 것
-> 초당 1씩 이동하므로 너무 빨라서 deltatime(초당처리가능수를 곱함)을 추가 -> 너무 느려서 speed항목을 만들엇 인스펙에서 수정가능하도록한다.
